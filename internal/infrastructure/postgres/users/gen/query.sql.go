// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package gen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (
    login,
    password_hash,
    created,
    updated
) VALUES (
    $1,
    $2,
    $3,
    $4
)
`

type CreateUserParams struct {
	Login        string
	PasswordHash string
	Created      pgtype.Timestamp
	Updated      pgtype.Timestamp
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser,
		arg.Login,
		arg.PasswordHash,
		arg.Created,
		arg.Updated,
	)
	return err
}

const getUserByLogin = `-- name: GetUserByLogin :one
SELECT id, login, password_hash, created, updated FROM users
WHERE login = $1
`

func (q *Queries) GetUserByLogin(ctx context.Context, login string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByLogin, login)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Login,
		&i.PasswordHash,
		&i.Created,
		&i.Updated,
	)
	return i, err
}
